From: Jason Wessel <jason.wessel@windriver.com>
Subject: [PATCH] Complete read and writes after EPOLLHUP

The pty output may not get flushed on a short lived process which has
a very small output buffer.  Example:

   lxc-attach -n cube-desktop cat /etc/hostname

OR 
   hst=`lxc-attach -n cube-desktop cat /etc/hostname`
   echo $hst

What will happen is that no output will be received to the controlling
pty.  When an EPOLLHUP is received the errors should not be printed
for the reads and writes, just process output and call it a day.

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>

---
 src/lxc/console.c |   32 ++++++++++++++++++++++----------
 1 file changed, 22 insertions(+), 10 deletions(-)

--- a/src/lxc/console.c
+++ b/src/lxc/console.c
@@ -578,14 +578,19 @@ int lxc_console_cb_tty_stdin(int fd, uin
 		struct lxc_epoll_descr *descr)
 {
 	struct lxc_tty_state *ts = cbdata;
+	static int epoll_stop = 0;
 	char c;
 
-	if (events & EPOLLHUP)
-		return 1;
+	if (events & EPOLLHUP) {
+		if (epoll_stop)
+			return 1;
+		epoll_stop = 1;
+	}
 
 	assert(fd == ts->stdinfd);
 	if (read(ts->stdinfd, &c, 1) < 0) {
-		SYSERROR("failed to read");
+		if (!epoll_stop)
+			SYSERROR("failed to read");
 		return 1;
 	}
 
@@ -603,11 +608,12 @@ int lxc_console_cb_tty_stdin(int fd, uin
 	}
 
 	if (write(ts->masterfd, &c, 1) < 0) {
-		SYSERROR("failed to write");
+		if (!epoll_stop)
+			SYSERROR("failed to write");
 		return 1;
 	}
 
-	return 0;
+	return epoll_stop;
 }
 
 int lxc_console_cb_tty_master(int fd, uint32_t events, void *cbdata,
@@ -616,24 +622,30 @@ int lxc_console_cb_tty_master(int fd, ui
 	struct lxc_tty_state *ts = cbdata;
 	char buf[1024];
 	int r, w;
+	static int epoll_stop = 0;
 
-	if (events & EPOLLHUP)
-		return 1;
+	if (events & EPOLLHUP) {
+		if (epoll_stop)
+			return 1;
+		epoll_stop = 1;
+	}
 
 	assert(fd == ts->masterfd);
 	r = read(fd, buf, sizeof(buf));
 	if (r < 0) {
-		SYSERROR("failed to read");
+		if (!epoll_stop)
+			SYSERROR("failed to read");
 		return 1;
 	}
 
 	w = write(ts->stdoutfd, buf, r);
 	if (w < 0 || w != r) {
-		SYSERROR("failed to write");
+		if (!epoll_stop)
+			SYSERROR("failed to write");
 		return 1;
 	}
 
-	return 0;
+	return epoll_stop;
 }
 
 int lxc_console_getfd(struct lxc_container *c, int *ttynum, int *masterfd)
