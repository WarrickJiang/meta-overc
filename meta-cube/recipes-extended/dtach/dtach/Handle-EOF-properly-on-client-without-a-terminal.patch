From: Jason Wessel <jason.wessel@windriver.com>
Date: Wed, 27 Jul 2016 09:39:13 -0500
Subject: [PATCH] Handle EOF properly on client without a terminal

If there is no controlling terminal a read on stdin will receive an
EOF.  At that point no further reads should be executed.  The server
side should appropriately place an EOF in the pty queue by issuing
control-d.

Test case 1:

dtach -c /tmp/aa -r none -w -W 10 -T -C -q \
   -Q sh -c "read a ; echo GOT ==$a==; date" < /dev/null

Test case 2:

dtach -N /tmp/aa -r none -w -W 10 -T -C -q \
   -R -Q sh -c "read a ; echo GOT ==$a==; date" & \
   (sleep 0.1 ; dtach -a /tmp/aa -q -C -T < /dev/null)

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 attach.c | 17 ++++++++++++-----
 dtach.h  |  1 +
 master.c |  6 ++++++
 3 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/attach.c b/attach.c
index 4032537..8b39e34 100644
--- a/attach.c
+++ b/attach.c
@@ -152,6 +152,7 @@ attach_main(int noerror)
 {
 	struct packet pkt;
 	unsigned char buf[BUFSIZE];
+	fd_set readfds_src;
 	fd_set readfds;
 	int s;
 
@@ -235,14 +236,15 @@ attach_main(int noerror)
 	ioctl(0, TIOCGWINSZ, &pkt.u.ws);
 	write(s, &pkt, sizeof(struct packet));
 
+	FD_ZERO(&readfds_src);
+	FD_SET(0, &readfds_src);
+	FD_SET(s, &readfds_src);
 	/* Wait for things to happen */
 	while (1)
 	{
 		int n, i, j;
 
-		FD_ZERO(&readfds);
-		FD_SET(0, &readfds);
-		FD_SET(s, &readfds);
+		memcpy(&readfds, &readfds_src, sizeof(fd_set));
 		n = select(s + 1, &readfds, NULL, NULL, NULL);
 		if (n < 0 && errno != EINTR && errno != EAGAIN)
 		{
@@ -294,8 +296,13 @@ attach_main(int noerror)
 			len = read(0, pkt.u.buf, sizeof(pkt.u.buf));
 
 			if (len <= 0)
-				exit(1);
-
+			{
+				/* Handle EOF on stdin for no terminal case */
+				if (len == 0 && allow_no_term)
+					FD_CLR(0, &readfds_src);
+				else
+					exit(1);
+			}
 			pkt.len = len;
 			process_kbd(s, &pkt);
 			n--;
diff --git a/dtach.h b/dtach.h
index bd82495..3389be5 100644
--- a/dtach.h
+++ b/dtach.h
@@ -86,6 +86,7 @@ extern int detach_char, no_suspend, redraw_method;
 extern int quiet_flag, do_clear, alarm_time, squash_crs, client_quit;
 extern struct termios orig_term;
 extern int dont_have_tty;
+extern int allow_no_term;
 
 enum
 {
diff --git a/master.c b/master.c
index 14ce513..52dbcf5 100644
--- a/master.c
+++ b/master.c
@@ -384,6 +384,12 @@ client_activity(struct client *p)
 	/* Push out data to the program. */
 	if (pkt.type == MSG_PUSH)
 	{
+		/* pkt.len == 0 means handle EOF (aka ctrl-d) */
+		if (pkt.len == 0)
+		{
+			pkt.u.buf[0] = 0x4;
+			write(the_pty.fd, pkt.u.buf, 1);
+		}
 		if (pkt.len <= sizeof(pkt.u.buf))
 			write(the_pty.fd, pkt.u.buf, pkt.len);
 	}
-- 
1.9.1

